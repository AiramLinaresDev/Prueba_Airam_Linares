---
interface Props {
    title: string;
    description: string;
    image: string;
    sales: number;
    price: number;
    salePrice: number;
    rate: number;
    timeToComplete?: string;
    lessons?: string;
    type?: string;
}

const { title, description, image, sales, price, salePrice, rate, timeToComplete, lessons, type } = Astro.props;
const shouldRenderDiv = timeToComplete || lessons || type;
---

<div class="approdable-card">
    <label class="badge" for="sale">Sale</label>
    <div id="topCarp">
        <div class="buttons">
            <button class="round"><img src="/src/svg/Like.svg" alt=""></button>
            <button class="round"><img src="/src/svg/Cart.svg" alt=""></button>
            <button class="round"><img src="/src/svg/Favorite.svg" alt=""></button>
        </div>
        <img id="principalImage" src={image} alt={title} />
    </div>
    <div id="topInfoCard">
        <h5 id="welcome">Welcome</h5>
        <p class="rate"><img src="/src/svg/Star.svg" alt=""> {rate}</p>
    </div>
    <h5>{title}</h5>
    <p id="description">{description}</p>
    <p class="sales"><img src="/src/svg/Download-icon.svg" alt="">{sales} sales</p>
    <div class="price">
        <p id="price">${price}</p>
        <p id="sale-price">${salePrice}</p>
    </div>
    {shouldRenderDiv && (
        <div id="timeToComplete">
            {timeToComplete && (
                <h5><img src="/src/svg/Clock.svg" alt=""/>{timeToComplete}</h5>
            )}
            {lessons && (
                <h5><img src="/src/svg/Lessons.svg" alt=""/>{lessons}</h5>
            )}
            {type && (
                <h5><img src="/src/svg/Progress.svg" alt=""/>{type}</h5>
            )}
            </div>
        )}
    <button id="btn-learn">Learn More <img src="/src/svg/arrow-next.svg" alt=""></button>
</div>

<style>
    .approdable-card {
        display: flex;
        position: relative;
        flex-direction: column;
        justify-content: start;
        background-color: #fff;
        flex: 0 0 48%;
        height: fit-content;
    }

    #topCarp {
        position: relative;
        height: 50%;
    }

    #principalImage {
        width: 100%;
        height: 100%;
    }

    #welcome {
        font-size: 0.9rem;
        color: #8D5CF6;
        text-align: start;
        margin: 1rem 1rem;
    }

    #topInfoCard {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: start;
    }

    #description {
        font-size: 14px;
        margin: 1rem 1rem;
    }

    #btn-learn {
        display: flex;
        flex-direction: row;
        justify-content: center;
        gap: 0.5rem;
        background-color: transparent;
        color: #8D5CF6;
        font-size: 1rem;
        font-weight: 700;
        border: 1px solid #8D5CF6;
        border-radius: 20px;
        padding: 0.7rem;
        margin: 1rem 1rem;
        cursor: pointer;
        width: 40%;

        img {
            transition: transform 0.3s ease-in-out;
        }
    }

    #btn-learn:hover img {
        transform: translateX(5px);
    }
    
    #timeToComplete {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        margin: 1.1rem 0 0.4rem 0;
        
        h5 {
            display: flex;
            flex-direction: row;
            gap: 0.5rem;
            font-size: 0.9rem;
            color: #737373;
            font-weight: 600;
        }
    }

    #sale-price {
        font-size: 1rem;
        font-weight: 700;
        color: #FF7B52;
        margin-left: 0;
    }

    #price {
        font-size: 1rem;
        font-weight: 700;
        color: #BDBDBD;
    }

    h5 {
        font-weight: 700;
        margin: 0 1rem;
        color: black;
    }

    p {
        color: #737373;
        margin: 1rem 1rem;
    }

    .price {
        display: flex;
        flex-direction: row;
        align-items: start;
        margin-bottom: -5%;

    }

    .sales {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.9rem;
        font-weight: 600;
        color: #737373;
        margin: -0.5rem 1rem;
    }

    .rate {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.75rem;
        color: #fff;
        background-color: #26335D;
        border-radius: 20px;
        padding: 0.2rem 0.5rem;
    }

    .badge {
        position: absolute;
        top: 2%;
        left: 4%;
        background-color: #E74040;
        color: #fff;
        padding: 0.3rem;
        border-radius: 5px;
        z-index: 2;
        font-size: 11px;
        font-weight: 700;
        letter-spacing: 0.09rem;
    }

    .buttons {
        display: flex;
        flex-direction: row;
        position: absolute;
        top: 80%;
        left: 50%;
        transform: translateX(-50%);
        gap: 1rem;
        z-index: 2;

    }
    .round {
        width: 2rem;
        height: 2rem;
        background-color: #fff;
        border: none;
        border-radius: 50%;
        cursor: pointer;
        
        img {
            margin-bottom: -2px;
            width: 1rem;
            height: 1rem;
        }

    }

    .round:hover {
        transform: scale(1.1);
    }
</style>

